(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{167:function(e,t,n){"use strict";var i=n(0),r=n.n(i),o=n(210),c=n.n(o);c.a.initialize({startOnLoad:!0});t.a=function(e){var t=e.chart;return Object(i.useEffect)((function(){c.a.contentLoaded()}),[]),r.a.createElement("div",{className:"mermaid"},t)}},283:function(e,t,n){var i={"./locale":161,"./locale.js":161};function r(e){var t=o(e);return n(t)}function o(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}r.keys=function(){return Object.keys(i)},r.resolve=o,e.exports=r,r.id=283},66:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return m})),n.d(t,"default",(function(){return l}));var i=n(3),r=n(7),o=(n(0),n(96)),c=n(167),a={id:"filtering",title:"How commit filtering works"},s={unversionedId:"contributing/filtering",id:"contributing/filtering",isDocsHomePage:!1,title:"How commit filtering works",description:"<Mermaid",source:"@site/docs/contributing/filtering.mdx",slug:"/contributing/filtering",permalink:"/docs/contributing/filtering",editUrl:"https://github.com/aevea/commitsar/edit/master/www/docs/contributing/filtering.mdx",version:"current",sidebar:"someSidebar",previous:{title:"Get started",permalink:"/docs/contributing/get_started"},next:{title:"Worker pipelines",permalink:"/docs/contributing/pipelines"}},m=[{value:"Branch diff",id:"branch-diff",children:[]},{value:"Filtering by type",id:"filtering-by-type",children:[]}],d={toc:m};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)(c.a,{chart:"\n\tgraph TD\n  A(First commit on master) --\x3e B(merge branch feat/docs into master)\n  B--\x3eC(Third commit on master)\n  B--\x3e|branch| D(first commit on branch)\n  D--\x3eE(second commit on branch)\n  E--\x3eF(merge master into branch)\n  C--\x3eF\n",mdxType:"Mermaid"}),Object(o.b)("h3",{id:"branch-diff"},"Branch diff"),Object(o.b)("p",null,"By default commitsar will run git log on the base branch and the branch which is going to get merged and gets a diff of the commit objects.\nThis allows us to get commits only on the branch iregardless of what was merged from master."),Object(o.b)("h3",{id:"filtering-by-type"},"Filtering by type"),Object(o.b)("p",null,"In the above example when running commitsar on master or the branch the commit ",Object(o.b)("inlineCode",{parentName:"p"},"merge branch feat/docs into master")," and ",Object(o.b)("inlineCode",{parentName:"p"},"merge master into branch")," will get filtered out.\nThis is to prevent commitsar checking the default merge commits which are not going to be conventional commit compliant."))}l.isMDXComponent=!0}}]);