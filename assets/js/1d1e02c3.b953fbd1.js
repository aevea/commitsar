(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{78:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),i=n(7),a=(n(0),n(96)),o={id:"get_started",title:"Get started"},l={unversionedId:"contributing/get_started",id:"contributing/get_started",isDocsHomePage:!1,title:"Get started",description:"Requirements",source:"@site/docs/contributing/get_started.md",slug:"/contributing/get_started",permalink:"/docs/contributing/get_started",editUrl:"https://github.com/aevea/commitsar/edit/master/www/docs/contributing/get_started.md",version:"current",sidebar:"someSidebar",previous:{title:"Configuration File",permalink:"/docs/configuration/config-file"},next:{title:"How commit filtering works",permalink:"/docs/contributing/filtering"}},c=[{value:"Requirements",id:"requirements",children:[]},{value:"Running tests",id:"running-tests",children:[]},{value:"Git bundles",id:"git-bundles",children:[{value:"Creating a new bundle",id:"creating-a-new-bundle",children:[]}]},{value:"Commit style",id:"commit-style",children:[]}],s={toc:c};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"requirements"},"Requirements"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"https://golang.org/"},"Go")," (See pinned version in go.mod)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"https://git-scm.com/"},"git")," (while git is not required to run commitsar it is needed to set up tests)")),Object(a.b)("p",null,"This project also uses ",Object(a.b)("a",{parentName:"p",href:"https://magefile.org/"},"magefiles"),". To get up and running please run: ",Object(a.b)("inlineCode",{parentName:"p"},"go install github.com/magefile/mage"),". These allow us to set up templates and cross-platform commands."),Object(a.b)("h2",{id:"running-tests"},"Running tests"),Object(a.b)("p",null,"Run ",Object(a.b)("inlineCode",{parentName:"p"},"mage test"),". This will git clone all git bundles and run tests in the entire repo. To run single tests use the VSCode functionality or provide full path to ",Object(a.b)("inlineCode",{parentName:"p"},"go test"),"."),Object(a.b)("h2",{id:"git-bundles"},"Git bundles"),Object(a.b)("p",null,"In order to test commitsar against complicated real-life examples we use ",Object(a.b)("a",{parentName:"p",href:"https://git-scm.com/docs/git-bundle"},"git bundles"),". These can be ",Object(a.b)("inlineCode",{parentName:"p"},"git cloned")," like real repositories. They allow us to created real history and prevent edge cases that can happen when creating git history using shell (all commits have same timestamp for example)."),Object(a.b)("h3",{id:"creating-a-new-bundle"},"Creating a new bundle"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"create a new folder testdata/"),Object(a.b)("li",{parentName:"ul"},"cd into it"),Object(a.b)("li",{parentName:"ul"},"git initgitz"),Object(a.b)("li",{parentName:"ul"},"commit away"),Object(a.b)("li",{parentName:"ul"},"once ready run ",Object(a.b)("inlineCode",{parentName:"li"},"git bundle create name_of_repo.bundle --all")),Object(a.b)("li",{parentName:"ul"},"copy the bundle to testdata/")),Object(a.b)("p",null,"All files outside of .bundle files are ignore in the testdata folder so you don't have to worry about cleanup."),Object(a.b)("h2",{id:"commit-style"},"Commit style"),Object(a.b)("p",null,"This project uses the ",Object(a.b)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"conventional commit style"),", it is also the default style commitsar uses."))}u.isMDXComponent=!0},96:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),u=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,m=p["".concat(o,".").concat(d)]||p[d]||b[d]||a;return n?i.a.createElement(m,l(l({ref:t},s),{},{components:n})):i.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);