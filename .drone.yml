kind: pipeline
name: default

steps:
  - name: fetch
    image: docker:git
    commands:
      - git fetch --tags
    when:
      event: [pull_request, tag]

  - name: test
    image: golang
    volumes:
      - name: deps
        path: /go
    commands:
      # git config is used for the test git repo creation
      - git config --global user.email "bot@commitsar.tch"
      - git config --global user.name "Commitsar Bot"
      - make setup-test
      - make ci
    when:
      event: [pull_request]
    depends_on: [fetch]

  - name: commitsar-check
    image: golang
    volumes:
      - name: deps
        path: /go
    commands:
      - go run main.go -v
    when:
      event: [pull_request]
    depends_on: [fetch]

  - name: release
    image: golang
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
    volumes:
      - name: deps
        path: /go
    commands:
      - curl -sL https://git.io/goreleaser | bash
    when:
      event: tag

  - name: docker
    image: plugins/docker
    settings:
      auto_tag: true
      repo: commitsar/commitsar
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password

  - name: publish-pages
    image: commitsar/hugo
    environment:
      USERNAME:
        from_secret: github_username
      PASSWORD:
        from_secret: github_token
    commands:
      - echo "machine github.com login $${USERNAME} password $${PASSWORD}" > ~/.netrc
      - git fetch --all
      - git config --global user.email "bot@commitsar.tch"
      - git config --global user.name "Commitsar Bot"
      - cd www
      - npm i
      - sh ../scripts/publish_to_pages.sh
    when:
      event: push
      branch: master

  - name: release-notes
    image: commitsar/release-notary:0.1.0
    environment:
      GITHUB_TOKEN:
        from_secret: github_token
      GITHUB_REPOSITORY: commitsar-app/commitsar
    commands:
      - release-notary publish
    when:
      event: [tag]
    depends_on: [fetch]

volumes:
  - name: deps
    temp: {}
